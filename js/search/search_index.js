var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.404,1,1.614]],["body/controllers/AppController.html",[0,1.743,1,2.518,2,1.743,3,0.675,4,0.675,5,0.575,6,2.768,7,3.433,8,3.433,9,0.783,10,1.917,11,3.992,12,2.004,13,0.05,14,1.032,15,3.433,16,1.525,17,1.479,18,0.848,19,0.902,20,2.097,21,2.768,22,3.433,23,0.675,24,0.165,25,2.331,26,2.004,27,1.743,28,3.433,29,0.039,30,0.039]],["title/modules/AppModule.html",[31,0.948,32,1.614]],["body/modules/AppModule.html",[1,2.517,2,1.94,3,0.56,4,0.56,5,0.477,13,0.051,18,0.973,19,0.748,20,2.199,21,2.296,23,0.56,24,0.137,29,0.035,30,0.035,31,1.478,32,3.07,33,1.265,34,1.445,35,1.933,36,1.933,37,1.445,38,2.517,39,1.662,40,2.296,41,2.296,42,2.296,43,2.199,44,2.512,45,2.594,46,1.933,47,1.933,48,2.847,49,3.081,50,2.847,51,2.847,52,2.296,53,2.847,54,2.847,55,2.847,56,2.847,57,1.662]],["title/injectables/AppService.html",[20,1.229,58,1.404]],["body/injectables/AppService.html",[3,0.715,4,0.715,5,0.609,9,0.829,10,1.987,11,4.074,13,0.05,14,1.093,16,1.615,17,1.532,18,0.715,19,0.955,20,1.987,23,0.715,24,0.175,27,1.846,29,0.041,30,0.041,58,2.27,59,2.468,60,2.932,61,3.635,62,3.635,63,3.635]],["title/classes/CreateUrlDto.html",[24,0.133,64,1.404]],["body/classes/CreateUrlDto.html",[3,0.578,4,0.578,5,0.492,9,0.671,12,1.717,13,0.051,14,0.884,17,1.502,18,0.862,23,0.578,24,0.188,29,0.036,30,0.036,64,1.982,65,1.493,66,3.149,67,2.372,68,1.982,69,2.558,70,1.502,71,2.941,72,2.279,73,1.338,74,3.905,75,2.279,76,3.149,77,3.905,78,2.941,79,3.535,80,3.535,81,2.941,82,3.905,83,2.372,84,3.905,85,1.997,86,1.997,87,2.941,88,2.372,89,1.717,90,3.149,91,2.941,92,2.941]],["title/classes/CreateUrlsTable1724011503102.html",[24,0.133,93,1.877]],["body/classes/CreateUrlsTable1724011503102.html",[3,0.493,4,0.493,5,0.42,9,0.572,10,1.557,13,0.049,14,1.053,16,1.557,18,0.493,23,0.493,24,0.12,29,0.032,30,0.032,65,1.273,70,1.201,93,2.379,94,3.256,95,2.218,96,3.121,97,2.023,98,2.825,99,4.037,100,4.763,101,2.78,102,3.503,103,3.503,104,3.503,105,5.066,106,2.509,107,2.045,108,1.779,109,2.045,110,3.524,111,3.503,112,2.509,113,1.273,114,2.379,115,3.503,116,2.825,117,2.825,118,1.464,119,2.509,120,2.509,121,2.509,122,2.023,123,3.503,124,3.841,125,1.273,126,3.503,127,2.023,128,2.023,129,2.023,130,2.356,131,1.703,132,2.023,133,3.256,134,2.825,135,2.023,136,2.023,137,2.509]],["title/modules/DatabaseModule.html",[31,0.948,43,1.229]],["body/modules/DatabaseModule.html",[3,0.745,4,0.745,5,0.635,13,0.05,18,0.902,19,0.995,23,0.745,24,0.182,29,0.042,30,0.042,31,1.572,33,1.684,38,2.212,39,2.212,43,2.038,138,3.79,139,3.348,140,3.79]],["title/classes/HttpExceptionFilter.html",[24,0.133,141,1.877]],["body/classes/HttpExceptionFilter.html",[3,0.504,4,0.504,5,0.429,9,0.585,10,1.581,13,0.05,14,1.069,16,1.14,18,0.699,19,0.674,23,0.504,24,0.123,25,1.741,26,1.497,29,0.032,30,0.032,65,1.302,70,0.879,80,3.294,98,2.869,107,2.077,108,1.806,109,2.077,141,2.416,142,3.294,143,2.068,144,4.085,145,2.774,146,1.741,147,2.565,148,2.565,149,2.774,150,3.558,151,4.635,152,3.294,153,4.412,154,2.565,155,3.558,156,2.565,157,2.565,158,2.869,159,2.416,160,1.741,161,2.565,162,1.806,163,2.565,164,2.705,165,2.565,166,2.565,167,2.565,168,2.565,169,2.565,170,2.565,171,2.077,172,2.565,173,3.558,174,1.741,175,2.565,176,2.565,177,2.565,178,2.565,179,2.565,180,2.565,181,2.565,182,2.565,183,2.565,184,2.565]],["title/classes/URLNotFoundException.html",[24,0.133,185,1.404]],["body/classes/URLNotFoundException.html",[3,0.711,4,0.711,5,0.606,13,0.05,14,1.088,18,0.876,19,0.95,23,0.711,24,0.174,29,0.041,30,0.041,65,1.837,88,2.918,146,3.281,171,2.112,185,2.264,186,2.603,187,2.918,188,4.459,189,3.897,190,3.619,191,2.457,192,3.619]],["title/entities/Url.html",[73,0.948,193,1.614]],["body/entities/Url.html",[3,0.402,4,0.402,5,0.343,9,0.691,12,2.756,13,0.051,14,1.419,17,1.364,18,0.402,23,0.402,24,0.098,29,0.028,30,0.028,57,2.685,68,1.537,69,2.102,70,1.726,73,1.037,108,2.49,113,1.039,118,2.102,122,2.441,125,2.02,127,2.904,128,2.441,129,2.441,130,2.323,132,2.441,133,3.585,134,3.209,135,2.441,136,2.441,193,1.195,194,1.39,195,1.651,196,3.602,197,3.602,198,3.602,199,3.602,200,2.904,201,2.595,202,3.027,203,2.047,204,4.445,205,3.602,206,2.047,207,3.979,208,2.047,209,2.047,210,3.027,211,2.047,212,3.602,213,2.047,214,2.047,215,2.047,216,2.047,217,3.027,218,2.047,219,4.246,220,3.979,221,2.047,222,2.047,223,1.651]],["title/controllers/UrlsController.html",[0,1.404,224,1.614]],["body/controllers/UrlsController.html",[0,1.467,2,0.977,3,0.378,4,0.378,5,0.322,9,0.439,10,1.284,12,1.687,13,0.051,14,0.869,16,1.284,17,1.323,18,0.854,19,0.505,23,0.378,24,0.092,25,1.306,26,1.123,27,1.467,29,0.026,30,0.026,64,2.288,70,1.418,72,2.253,73,1.625,75,2.253,85,1.306,89,2.706,95,1.467,101,2.026,107,1.687,108,1.467,109,1.687,114,1.306,125,1.467,145,1.306,149,1.962,159,2.62,160,1.306,162,1.467,164,1.123,171,2.026,173,3.112,174,1.306,185,1.762,186,1.123,224,1.687,225,1.552,226,3.504,227,2.89,228,1.924,229,4.137,230,1.924,231,1.924,232,2.89,233,1.924,234,2.89,235,1.924,236,1.924,237,1.924,238,1.924,239,1.924,240,1.924,241,1.924,242,2.89,243,2.89,244,1.924,245,2.89,246,2.89,247,1.924,248,1.924,249,2.8,250,1.552,251,1.552,252,1.924,253,3.471,254,2.89,255,4.137,256,1.543,257,1.552,258,1.552,259,1.552,260,1.552,261,1.924,262,1.552,263,1.924,264,2.89,265,1.924,266,1.924,267,1.924,268,2.89,269,1.552,270,1.924,271,1.552,272,1.924,273,1.924,274,1.924,275,1.552,276,2.331]],["title/modules/UrlsModule.html",[31,0.948,44,1.404]],["body/modules/UrlsModule.html",[2,2.027,3,0.598,4,0.598,5,0.509,13,0.05,18,0.966,19,0.799,23,0.598,24,0.146,29,0.036,30,0.036,31,1.527,33,1.352,34,1.544,35,2.065,36,2.065,37,1.544,38,2.601,39,1.776,43,2.241,44,2.647,45,2.71,46,2.065,47,2.065,49,3.219,224,2.601,256,2.241,257,2.453,277,2.453,278,3.042,279,2.453,280,3.042,281,3.042,282,2.71,283,3.042,284,3.042]],["title/injectables/UrlsService.html",[58,1.404,256,1.229]],["body/injectables/UrlsService.html",[3,0.2,4,0.2,5,0.17,9,0.232,10,0.769,13,0.051,14,1.099,16,1.853,17,1.353,18,0.64,19,0.267,23,0.2,24,0.049,26,0.594,27,1.856,29,0.016,30,0.016,57,1.319,58,0.879,59,0.691,64,1.652,68,0.879,69,1.319,70,1.115,72,1.899,73,1.652,75,1.557,89,1.557,95,1.148,101,2.58,107,1.899,108,1.652,109,1.899,110,3.438,113,0.517,114,2.482,117,1.396,118,2.134,124,0.821,125,2.548,130,1.011,131,1.535,145,1.176,146,1.176,149,1.811,162,1.148,164,2.434,171,1.557,174,0.691,185,0.879,186,0.594,189,0.821,200,0.821,201,2.134,223,2.8,251,2.151,256,0.769,258,0.821,259,0.821,260,0.821,262,2.151,271,1.396,275,0.821,276,1.396,285,0.821,286,1.732,287,1.732,288,2.668,289,1.732,290,1.732,291,1.018,292,2.668,293,1.732,294,1.732,295,1.018,296,1.018,297,1.732,298,2.668,299,2.991,300,2.26,301,1.176,302,1.732,303,1.396,304,2.412,305,2.668,306,1.732,307,1.018,308,2.668,309,2.668,310,2.668,311,1.396,312,1.732,313,1.732,314,1.396,315,2.668,316,1.732,317,1.732,318,1.732,319,1.018,320,1.732,321,1.732,322,1.732,323,1.018,324,2.151,325,1.732,326,2.991,327,1.732,328,1.732,329,1.018,330,1.018,331,1.018,332,1.732,333,2.151,334,1.732,335,1.018,336,1.732,337,1.396,338,1.396,339,1.823,340,2.26,341,1.732,342,1.732,343,0.821,344,0.691,345,0.691,346,1.018,347,1.732,348,1.732,349,1.018,350,1.018,351,1.018,352,1.018,353,1.018,354,2.26,355,1.732,356,1.823,357,1.732,358,1.018,359,1.018,360,1.018,361,1.018,362,1.018,363,1.018,364,1.732,365,1.018,366,1.018,367,1.018,368,1.018,369,1.018,370,1.018,371,2.26,372,1.018,373,1.018,374,1.732,375,1.018,376,1.018,377,1.732]],["title/coverage.html",[378,3.021]],["body/coverage.html",[0,1.715,1,1.39,5,0.399,6,1.921,13,0.05,20,1.058,24,0.217,29,0.031,30,0.031,37,1.209,58,1.715,60,1.921,64,1.209,66,1.921,67,1.921,70,0.816,73,1.158,86,1.617,93,1.617,94,1.921,95,1.209,96,1.617,97,1.921,116,1.921,131,3.689,139,1.617,141,1.617,142,1.921,143,1.921,162,1.209,185,1.209,186,1.39,187,1.921,191,1.617,193,1.39,195,2.724,224,1.39,225,1.921,256,1.058,282,1.617,285,1.921,344,1.617,345,1.617,378,1.921,379,1.921,380,2.382,381,2.382,382,4.271,383,3.165,384,5.135,385,5.228,386,1.921,387,1.921,388,2.724,389,1.921,390,3.925,391,2.724,392,2.724,393,1.921,394,1.921,395,1.921,396,2.665,397,2.382,398,1.921,399,1.921,400,2.382,401,1.921,402,2.382,403,2.382,404,2.382]],["title/dependencies.html",[34,1.684,405,1.873]],["body/dependencies.html",[13,0.051,19,0.902,24,0.207,29,0.039,30,0.039,34,1.743,52,2.768,83,2.768,85,2.331,113,1.743,160,2.331,406,3.805,407,3.433,408,3.433,409,3.433,410,3.433,411,3.433,412,3.433,413,3.433,414,3.433,415,3.433,416,3.433,417,3.433,418,3.433,419,3.433,420,2.768,421,2.768,422,3.433,423,3.433,424,3.433,425,3.433,426,3.433,427,2.768]],["title/miscellaneous/functions.html",[428,1.356,429,2.675]],["body/miscellaneous/functions.html",[9,0.945,13,0.044,29,0.044,30,0.044,37,2.6,396,2.813,428,2.418,429,3.341,430,3.341]],["title/index.html",[9,0.53,431,2.322,432,2.322]],["body/index.html",[13,0.044,17,1.18,29,0.031,30,0.031,31,0.839,69,1.428,72,1.428,73,1.561,75,1.428,76,2.777,95,1.242,96,2.338,113,1.242,118,1.428,125,1.242,158,1.974,159,1.662,193,1.428,201,1.428,226,1.974,249,1.974,250,2.777,301,1.662,311,1.974,337,1.974,338,1.974,356,1.974,379,3.486,406,1.974,420,1.974,421,1.974,427,1.974,433,3.443,434,2.447,435,3.443,436,2.447,437,3.443,438,2.447,439,2.447,440,3.443,441,3.443,442,2.447,443,2.447,444,2.447,445,4.555,446,3.443,447,2.447,448,3.984,449,2.447,450,1.662,451,2.447,452,2.447,453,3.443,454,2.447,455,2.447,456,2.447,457,2.447,458,2.447,459,2.447,460,2.447,461,2.447,462,2.447,463,2.447,464,2.447,465,2.447,466,2.447,467,3.443,468,2.447,469,3.984,470,2.447,471,3.443,472,3.443,473,2.447,474,2.447,475,2.447,476,1.974,477,2.447,478,2.447,479,2.447,480,2.447,481,2.447,482,2.447,483,2.447,484,3.984,485,3.984,486,2.447,487,3.443,488,3.984,489,2.447,490,2.447,491,2.447,492,2.447,493,2.447,494,2.447,495,2.447,496,2.447,497,2.447,498,2.447,499,2.447,500,2.447,501,2.447,502,2.447,503,2.447,504,2.447]],["title/modules.html",[33,1.665]],["body/modules.html",[13,0.043,29,0.043,30,0.043,32,2.334,33,1.777,43,1.777,44,2.03,505,4.735,506,4.735,507,4.735,508,5.045,509,3.998,510,3.998]],["title/overview.html",[511,3.021]],["body/overview.html",[2,1.678,13,0.048,20,2.06,29,0.038,30,0.038,31,1.133,32,3.096,33,1.469,34,1.678,35,2.244,36,2.244,37,1.678,38,1.929,39,1.929,40,2.666,41,2.666,42,2.666,43,2.17,44,2.66,45,2.86,46,2.244,47,2.244,59,2.244,65,1.678,194,2.244,256,2.06,277,2.666,279,2.666,339,2.666,511,2.666,512,3.305,513,4.213,514,3.305]],["title/properties.html",[68,1.684,405,1.873]],["body/properties.html",[13,0.05,29,0.044,30,0.044,68,2.071,89,2.381,303,3.29,515,4.08,516,4.08,517,4.08,518,4.08]],["title/miscellaneous/variables.html",[428,1.356,450,2.252]],["body/miscellaneous/variables.html",[9,0.444,13,0.051,17,1.496,27,0.989,29,0.027,30,0.027,57,1.703,70,1.708,73,1.198,79,1.571,86,1.98,90,3.131,101,1.137,130,2.872,139,1.98,152,2.352,162,1.481,164,1.137,191,1.98,194,1.98,201,1.137,269,1.571,282,1.98,301,1.98,304,2.352,314,3.968,324,1.571,333,2.352,343,2.352,344,1.98,345,2.636,383,1.571,386,3.353,387,1.571,388,3.131,389,1.571,391,1.571,392,2.82,393,2.352,394,2.352,395,1.571,396,1.322,398,2.352,399,2.352,401,1.571,428,1.137,430,2.352,450,1.322,476,1.571,519,3.497,520,2.917,521,1.948,522,1.948,523,1.948,524,1.948,525,1.948,526,1.948,527,2.917,528,1.948,529,2.917,530,1.948,531,1.948,532,2.917,533,1.948,534,2.917,535,1.948,536,2.917,537,1.948,538,2.917,539,2.917,540,2.917,541,1.948,542,1.948,543,1.948,544,3.497,545,2.917,546,3.497,547,3.883,548,1.948,549,1.948,550,1.948,551,1.948,552,1.948,553,1.948,554,1.948,555,1.948,556,1.948,557,1.948,558,1.948,559,2.917,560,1.948]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUrlDto.html":{},"classes/CreateUrlsTable1724011503102.html":{},"modules/DatabaseModule.html":{},"classes/HttpExceptionFilter.html":{},"classes/URLNotFoundException.html":{},"entities/Url.html":{},"controllers/UrlsController.html":{},"modules/UrlsModule.html":{},"injectables/UrlsService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":131,"title":{},"body":{"classes/CreateUrlsTable1724011503102.html":{},"injectables/UrlsService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":515,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":417,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":424,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":427,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["0.5.1",{"_index":416,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":385,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":382,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":390,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":400,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":339,"title":{},"body":{"injectables/UrlsService.html":{},"overview.html":{}}}],["10",{"_index":210,"title":{},"body":{"entities/Url.html":{}}}],["10.0.0",{"_index":406,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["10.0.2",{"_index":414,"title":{},"body":{"dependencies.html":{}}}],["16.4.5",{"_index":419,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":513,"title":{},"body":{"overview.html":{}}}],["20.x",{"_index":441,"title":{},"body":{"index.html":{}}}],["200",{"_index":232,"title":{},"body":{"controllers/UrlsController.html":{}}}],["201",{"_index":242,"title":{},"body":{"controllers/UrlsController.html":{}}}],["3",{"_index":512,"title":{},"body":{"overview.html":{}}}],["3.2.3",{"_index":407,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":245,"title":{},"body":{"controllers/UrlsController.html":{}}}],["404",{"_index":234,"title":{},"body":{"controllers/UrlsController.html":{}}}],["5",{"_index":514,"title":{},"body":{"overview.html":{}}}],["6",{"_index":315,"title":{},"body":{"injectables/UrlsService.html":{}}}],["6/9",{"_index":403,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":402,"title":{},"body":{"coverage.html":{}}}],["7.4.0",{"_index":412,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":426,"title":{},"body":{"dependencies.html":{}}}],["8.12.0",{"_index":421,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["8000",{"_index":556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["__dirname",{"_index":540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_urlrepository",{"_index":294,"title":{},"body":{"injectables/UrlsService.html":{}}}],["abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789",{"_index":525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["access",{"_index":485,"title":{},"body":{"index.html":{}}}],["already",{"_index":300,"title":{},"body":{"injectables/UrlsService.html":{}}}],["api",{"_index":489,"title":{},"body":{"index.html":{}}}],["api_domain=http://localhost",{"_index":452,"title":{},"body":{"index.html":{}}}],["apibody",{"_index":254,"title":{},"body":{"controllers/UrlsController.html":{}}}],["apioperation",{"_index":253,"title":{},"body":{"controllers/UrlsController.html":{}}}],["apiproperty",{"_index":84,"title":{},"body":{"classes/CreateUrlDto.html":{}}}],["apiproperty({description",{"_index":71,"title":{},"body":{"classes/CreateUrlDto.html":{}}}],["apiresponse",{"_index":255,"title":{},"body":{"controllers/UrlsController.html":{}}}],["apitags",{"_index":252,"title":{},"body":{"controllers/UrlsController.html":{}}}],["apitags('urls",{"_index":261,"title":{},"body":{"controllers/UrlsController.html":{}}}],["app",{"_index":8,"title":{},"body":{"controllers/AppController.html":{}}}],["app.controller",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_port=3001",{"_index":451,"title":{},"body":{"index.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":435,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":32,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":20,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentshost",{"_index":153,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["associated",{"_index":321,"title":{},"body":{"injectables/UrlsService.html":{}}}],["async",{"_index":101,"title":{},"body":{"classes/CreateUrlsTable1724011503102.html":{},"controllers/UrlsController.html":{},"injectables/UrlsService.html":{},"miscellaneous/variables.html":{}}}],["author",{"_index":518,"title":{},"body":{"properties.html":{}}}],["autor",{"_index":504,"title":{},"body":{"index.html":{}}}],["available",{"_index":510,"title":{},"body":{"modules.html":{}}}],["await",{"_index":114,"title":{},"body":{"classes/CreateUrlsTable1724011503102.html":{},"controllers/UrlsController.html":{},"injectables/UrlsService.html":{}}}],["backend",{"_index":434,"title":{},"body":{"index.html":{}}}],["base62",{"_index":312,"title":{},"body":{"injectables/UrlsService.html":{}}}],["base62_characters",{"_index":344,"title":{},"body":{"injectables/UrlsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["body",{"_index":250,"title":{},"body":{"controllers/UrlsController.html":{},"index.html":{}}}],["bootstrap",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/UrlsModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["break",{"_index":376,"title":{},"body":{"injectables/UrlsService.html":{}}}],["browse",{"_index":508,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":505,"title":{},"body":{"modules.html":{}}}],["catch",{"_index":145,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"controllers/UrlsController.html":{},"injectables/UrlsService.html":{}}}],["catch(exception",{"_index":150,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(httpexception",{"_index":161,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["characters",{"_index":313,"title":{},"body":{"injectables/UrlsService.html":{}}}],["check",{"_index":331,"title":{},"body":{"injectables/UrlsService.html":{}}}],["checks",{"_index":330,"title":{},"body":{"injectables/UrlsService.html":{}}}],["class",{"_index":24,"title":{"classes/CreateUrlDto.html":{},"classes/CreateUrlsTable1724011503102.html":{},"classes/HttpExceptionFilter.html":{},"classes/URLNotFoundException.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUrlDto.html":{},"classes/CreateUrlsTable1724011503102.html":{},"modules/DatabaseModule.html":{},"classes/HttpExceptionFilter.html":{},"classes/URLNotFoundException.html":{},"entities/Url.html":{},"controllers/UrlsController.html":{},"modules/UrlsModule.html":{},"injectables/UrlsService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":65,"title":{},"body":{"classes/CreateUrlDto.html":{},"classes/CreateUrlsTable1724011503102.html":{},"classes/HttpExceptionFilter.html":{},"classes/URLNotFoundException.html":{},"overview.html":{}}}],["click",{"_index":337,"title":{},"body":{"injectables/UrlsService.html":{},"index.html":{}}}],["click_count",{"_index":129,"title":{},"body":{"classes/CreateUrlsTable1724011503102.html":{},"entities/Url.html":{}}}],["clickcount",{"_index":196,"title":{},"body":{"entities/Url.html":{}}}],["clone",{"_index":464,"title":{},"body":{"index.html":{}}}],["clone:example",{"_index":462,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_urlsmodule",{"_index":277,"title":{},"body":{"modules/UrlsModule.html":{},"overview.html":{}}}],["cluster_urlsmodule_imports",{"_index":278,"title":{},"body":{"modules/UrlsModule.html":{}}}],["cluster_urlsmodule_providers",{"_index":279,"title":{},"body":{"modules/UrlsModule.html":{},"overview.html":{}}}],["column",{"_index":219,"title":{},"body":{"entities/Url.html":{}}}],["column({length",{"_index":209,"title":{},"body":{"entities/Url.html":{}}}],["column({name",{"_index":202,"title":{},"body":{"entities/Url.html":{}}}],["column({type",{"_index":216,"title":{},"body":{"entities/Url.html":{}}}],["common/constants/constants",{"_index":346,"title":{},"body":{"injectables/UrlsService.html":{}}}],["common/constants/validation",{"_index":87,"title":{},"body":{"classes/CreateUrlDto.html":{}}}],["complete",{"_index":501,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":488,"title":{},"body":{"index.html":{}}}],["compose",{"_index":459,"title":{},"body":{"index.html":{}}}],["config",{"_index":393,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configmodule",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('database_host",{"_index":548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('database_name",{"_index":550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('database_password",{"_index":553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('database_port",{"_index":549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('database_schema",{"_index":551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('database_user",{"_index":552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":164,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"controllers/UrlsController.html":{},"injectables/UrlsService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":146,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/URLNotFoundException.html":{},"injectables/UrlsService.html":{}}}],["constructor(_urlrepository",{"_index":291,"title":{},"body":{"injectables/UrlsService.html":{}}}],["constructor(logger",{"_index":147,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["constructor(private",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/UrlsController.html":{}}}],["containing",{"_index":305,"title":{},"body":{"injectables/UrlsService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/UrlsController.html":{}},"body":{"controllers/AppController.html":{},"controllers/UrlsController.html":{},"coverage.html":{}}}],["controller('/app",{"_index":22,"title":{},"body":{"controllers/AppController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/UrlsController.html":{},"modules/UrlsModule.html":{},"overview.html":{}}}],["count",{"_index":338,"title":{},"body":{"injectables/UrlsService.html":{},"index.html":{}}}],["coverage",{"_index":378,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":95,"title":{},"body":{"classes/CreateUrlsTable1724011503102.html":{},"controllers/UrlsController.html":{},"injectables/UrlsService.html":{},"coverage.html":{},"index.html":{}}}],["create(undefined",{"_index":295,"title":{},"body":{"injectables/UrlsService.html":{}}}],["created_at",{"_index":132,"title":{},"body":{"classes/CreateUrlsTable1724011503102.html":{},"entities/Url.html":{}}}],["createdat",{"_index":197,"title":{},"body":{"entities/Url.html":{}}}],["createdatecolumn",{"_index":220,"title":{},"body":{"entities/Url.html":{}}}],["createdatecolumn({type",{"_index":205,"title":{},"body":{"entities/Url.html":{}}}],["creates",{"_index":297,"title":{},"body":{"injectables/UrlsService.html":{}}}],["createurldto",{"_index":64,"title":{"classes/CreateUrlDto.html":{}},"body":{"classes/CreateUrlDto.html":{},"controllers/UrlsController.html":{},"injectables/UrlsService.html":{},"coverage.html":{}}}],["createurldto})@apiresponse({status",{"_index":241,"title":{},"body":{"controllers/UrlsController.html":{}}}],["createurlstable1724011503102",{"_index":93,"title":{"classes/CreateUrlsTable1724011503102.html":{}},"body":{"classes/CreateUrlsTable1724011503102.html":{},"coverage.html":{}}}],["creating",{"_index":353,"title":{},"body":{"injectables/UrlsService.html":{}}}],["ctx",{"_index":165,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":168,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":167,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["currently",{"_index":325,"title":{},"body":{"injectables/UrlsService.html":{}}}],["data",{"_index":351,"title":{},"body":{"injectables/UrlsService.html":{}}}],["data_source",{"_index":386,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":301,"title":{},"body":{"injectables/UrlsService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["database.providers",{"_index":140,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["database/database.module",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["database_host",{"_index":453,"title":{},"body":{"index.html":{}}}],["database_name",{"_index":455,"title":{},"body":{"index.html":{}}}],["database_password",{"_index":457,"title":{},"body":{"index.html":{}}}],["database_port=5432",{"_index":454,"title":{},"body":{"index.html":{}}}],["database_schema=public",{"_index":458,"title":{},"body":{"index.html":{}}}],["database_user",{"_index":456,"title":{},"body":{"index.html":{}}}],["databasemodule",{"_index":43,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/UrlsModule.html":{},"modules.html":{},"overview.html":{}}}],["databaseproviders",{"_index":139,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["datasource",{"_index":547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource(config",{"_index":543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getrepository(url",{"_index":558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.initialize",{"_index":554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasourceoptions",{"_index":526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":204,"title":{},"body":{"entities/Url.html":{}}}],["date().toisostring",{"_index":182,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["db",{"_index":461,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/UrlsModule.html":{},"overview.html":{}}}],["decorators",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateUrlDto.html":{},"entities/Url.html":{},"controllers/UrlsController.html":{}}}],["default",{"_index":130,"title":{},"body":{"classes/CreateUrlsTable1724011503102.html":{},"entities/Url.html":{},"injectables/UrlsService.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":317,"title":{},"body":{"injectables/UrlsService.html":{}}}],["defined",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateUrlDto.html":{},"classes/CreateUrlsTable1724011503102.html":{},"classes/HttpExceptionFilter.html":{},"classes/URLNotFoundException.html":{},"entities/Url.html":{},"controllers/UrlsController.html":{},"injectables/UrlsService.html":{}}}],["deleted_at",{"_index":136,"title":{},"body":{"classes/CreateUrlsTable1724011503102.html":{},"entities/Url.html":{}}}],["deletedat",{"_index":198,"title":{},"body":{"entities/Url.html":{}}}],["dependencies",{"_index":34,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/UrlsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependencies:example",{"_index":468,"title":{},"body":{"index.html":{}}}],["description",{"_index":89,"title":{},"body":{"classes/CreateUrlDto.html":{},"controllers/UrlsController.html":{},"injectables/UrlsService.html":{},"properties.html":{}}}],["desired",{"_index":316,"title":{},"body":{"injectables/UrlsService.html":{}}}],["doc",{"_index":490,"title":{},"body":{"index.html":{}}}],["doc/json",{"_index":491,"title":{},"body":{"index.html":{}}}],["docker",{"_index":448,"title":{},"body":{"index.html":{}}}],["docs",{"_index":496,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":379,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["domain_default",{"_index":398,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["don't",{"_index":478,"title":{},"body":{"index.html":{}}}],["dotenv",{"_index":418,"title":{},"body":{"dependencies.html":{}}}],["down",{"_index":102,"title":{},"body":{"classes/CreateUrlsTable1724011503102.html":{}}}],["down(queryrunner",{"_index":104,"title":{},"body":{"classes/CreateUrlsTable1724011503102.html":{}}}],["drop",{"_index":137,"title":{},"body":{"classes/CreateUrlsTable1724011503102.html":{}}}],["dto/create",{"_index":258,"title":{},"body":{"controllers/UrlsController.html":{},"injectables/UrlsService.html":{}}}],["entities",{"_index":194,"title":{},"body":{"entities/Url.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entities/url.entity",{"_index":349,"title":{},"body":{"injectables/UrlsService.html":{}}}],["entities/url.providers",{"_index":283,"title":{},"body":{"modules/UrlsModule.html":{}}}],["entity",{"_index":193,"title":{"entities/Url.html":{}},"body":{"entities/Url.html":{},"coverage.html":{},"index.html":{}}}],["entity('urls",{"_index":222,"title":{},"body":{"entities/Url.html":{}}}],["entity.{js,ts",{"_index":541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entitynotfounderror",{"_index":348,"title":{},"body":{"injectables/UrlsService.html":{}}}],["environment",{"_index":449,"title":{},"body":{"index.html":{}}}],["er",{"_index":499,"title":{},"body":{"index.html":{}}}],["error",{"_index":171,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/URLNotFoundException.html":{},"controllers/UrlsController.html":{},"injectables/UrlsService.html":{}}}],["error_messages",{"_index":191,"title":{},"body":{"classes/URLNotFoundException.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":260,"title":{},"body":{"controllers/UrlsController.html":{},"injectables/UrlsService.html":{}}}],["errors.ts",{"_index":187,"title":{},"body":{"classes/URLNotFoundException.html":{},"coverage.html":{}}}],["errors.ts:4",{"_index":190,"title":{},"body":{"classes/URLNotFoundException.html":{}}}],["example",{"_index":76,"title":{},"body":{"classes/CreateUrlDto.html":{},"index.html":{}}}],["exception",{"_index":155,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.filter.ts",{"_index":143,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:12",{"_index":148,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.filter.ts:15",{"_index":154,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getresponse()['message",{"_index":169,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getstatus",{"_index":175,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exceptionfilter",{"_index":144,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["execute",{"_index":475,"title":{},"body":{"index.html":{}}}],["existing",{"_index":302,"title":{},"body":{"injectables/UrlsService.html":{}}}],["exists",{"_index":117,"title":{},"body":{"classes/CreateUrlsTable1724011503102.html":{},"injectables/UrlsService.html":{}}}],["export",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUrlDto.html":{},"classes/CreateUrlsTable1724011503102.html":{},"modules/DatabaseModule.html":{},"classes/HttpExceptionFilter.html":{},"classes/URLNotFoundException.html":{},"entities/Url.html":{},"controllers/UrlsController.html":{},"modules/UrlsModule.html":{},"injectables/UrlsService.html":{}}}],["exports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/UrlsModule.html":{},"overview.html":{}}}],["express",{"_index":160,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"controllers/UrlsController.html":{},"dependencies.html":{}}}],["extends",{"_index":188,"title":{},"body":{"classes/URLNotFoundException.html":{}}}],["false",{"_index":333,"title":{},"body":{"injectables/UrlsService.html":{},"miscellaneous/variables.html":{}}}],["features",{"_index":444,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUrlDto.html":{},"classes/CreateUrlsTable1724011503102.html":{},"modules/DatabaseModule.html":{},"classes/HttpExceptionFilter.html":{},"classes/URLNotFoundException.html":{},"entities/Url.html":{},"controllers/UrlsController.html":{},"modules/UrlsModule.html":{},"injectables/UrlsService.html":{},"coverage.html":{}}}],["folder",{"_index":497,"title":{},"body":{"index.html":{}}}],["found",{"_index":269,"title":{},"body":{"controllers/UrlsController.html":{},"miscellaneous/variables.html":{}}}],["found.'})@get(':hash",{"_index":235,"title":{},"body":{"controllers/UrlsController.html":{}}}],["function",{"_index":397,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":429,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["future",{"_index":502,"title":{},"body":{"index.html":{}}}],["generate",{"_index":486,"title":{},"body":{"index.html":{}}}],["generated",{"_index":494,"title":{},"body":{"index.html":{}}}],["generatehash",{"_index":286,"title":{},"body":{"injectables/UrlsService.html":{}}}],["generatehash(length",{"_index":306,"title":{},"body":{"injectables/UrlsService.html":{}}}],["generates",{"_index":308,"title":{},"body":{"injectables/UrlsService.html":{}}}],["get(':hash",{"_index":268,"title":{},"body":{"controllers/UrlsController.html":{}}}],["get(':hash')@apioperation({summary",{"_index":230,"title":{},"body":{"controllers/UrlsController.html":{}}}],["gethello",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getoriginalurlbyhash",{"_index":287,"title":{},"body":{"injectables/UrlsService.html":{}}}],["getoriginalurlbyhash(hash",{"_index":318,"title":{},"body":{"injectables/UrlsService.html":{}}}],["getting",{"_index":431,"title":{"index.html":{}},"body":{}}],["getvalidhash",{"_index":288,"title":{},"body":{"injectables/UrlsService.html":{}}}],["git",{"_index":463,"title":{},"body":{"index.html":{}}}],["given",{"_index":299,"title":{},"body":{"injectables/UrlsService.html":{}}}],["graph",{"_index":509,"title":{},"body":{"modules.html":{}}}],["hash",{"_index":125,"title":{},"body":{"classes/CreateUrlsTable1724011503102.html":{},"entities/Url.html":{},"controllers/UrlsController.html":{},"injectables/UrlsService.html":{},"index.html":{}}}],["hash.length",{"_index":364,"title":{},"body":{"injectables/UrlsService.html":{}}}],["hashexists",{"_index":377,"title":{},"body":{"injectables/UrlsService.html":{}}}],["hashinuse",{"_index":289,"title":{},"body":{"injectables/UrlsService.html":{}}}],["hashinuse(hash",{"_index":328,"title":{},"body":{"injectables/UrlsService.html":{}}}],["hashvalid",{"_index":371,"title":{},"body":{"injectables/UrlsService.html":{}}}],["hashvalid.length",{"_index":372,"title":{},"body":{"injectables/UrlsService.html":{}}}],["headers",{"_index":483,"title":{},"body":{"index.html":{}}}],["hello",{"_index":62,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":493,"title":{},"body":{"index.html":{}}}],["host",{"_index":152,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["host.switchtohttp",{"_index":166,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["http://localhost",{"_index":555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpexception",{"_index":151,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpexceptionfilter",{"_index":141,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["https://github.com/jonlima/url",{"_index":465,"title":{},"body":{"index.html":{}}}],["https://google.com/very/long/url",{"_index":77,"title":{},"body":{"classes/CreateUrlDto.html":{}}}],["httpstatus",{"_index":157,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpstatus.internal_server_error",{"_index":176,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["id",{"_index":118,"title":{},"body":{"classes/CreateUrlsTable1724011503102.html":{},"entities/Url.html":{},"injectables/UrlsService.html":{},"index.html":{}}}],["identifier",{"_index":380,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":98,"title":{},"body":{"classes/CreateUrlsTable1724011503102.html":{},"classes/HttpExceptionFilter.html":{}}}],["import",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUrlDto.html":{},"classes/CreateUrlsTable1724011503102.html":{},"modules/DatabaseModule.html":{},"classes/HttpExceptionFilter.html":{},"classes/URLNotFoundException.html":{},"entities/Url.html":{},"controllers/UrlsController.html":{},"modules/UrlsModule.html":{},"injectables/UrlsService.html":{}}}],["imports",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/UrlsModule.html":{}}}],["increaseclickcount",{"_index":290,"title":{},"body":{"injectables/UrlsService.html":{}}}],["increaseclickcount(urlid",{"_index":334,"title":{},"body":{"injectables/UrlsService.html":{}}}],["incremented",{"_index":341,"title":{},"body":{"injectables/UrlsService.html":{}}}],["increments",{"_index":336,"title":{},"body":{"injectables/UrlsService.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateUrlDto.html":{},"classes/CreateUrlsTable1724011503102.html":{},"classes/HttpExceptionFilter.html":{},"entities/Url.html":{},"controllers/UrlsController.html":{},"injectables/UrlsService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["index('urls_hash_index",{"_index":221,"title":{},"body":{"entities/Url.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUrlDto.html":{},"classes/CreateUrlsTable1724011503102.html":{},"modules/DatabaseModule.html":{},"classes/HttpExceptionFilter.html":{},"classes/URLNotFoundException.html":{},"entities/Url.html":{},"controllers/UrlsController.html":{},"modules/UrlsModule.html":{},"injectables/UrlsService.html":{}}}],["inject",{"_index":343,"title":{},"body":{"injectables/UrlsService.html":{},"miscellaneous/variables.html":{}}}],["inject(urls_repository",{"_index":350,"title":{},"body":{"injectables/UrlsService.html":{}}}],["injectable",{"_index":58,"title":{"injectables/AppService.html":{},"injectables/UrlsService.html":{}},"body":{"injectables/AppService.html":{},"injectables/UrlsService.html":{},"coverage.html":{}}}],["injectables",{"_index":59,"title":{},"body":{"injectables/AppService.html":{},"injectables/UrlsService.html":{},"overview.html":{}}}],["install",{"_index":467,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":174,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"controllers/UrlsController.html":{},"injectables/UrlsService.html":{}}}],["int",{"_index":123,"title":{},"body":{"classes/CreateUrlsTable1724011503102.html":{}}}],["integer",{"_index":217,"title":{},"body":{"entities/Url.html":{}}}],["invalid",{"_index":246,"title":{},"body":{"controllers/UrlsController.html":{}}}],["isglobal",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["isinuse",{"_index":374,"title":{},"body":{"injectables/UrlsService.html":{}}}],["isnotempty",{"_index":82,"title":{},"body":{"classes/CreateUrlDto.html":{}}}],["isnull",{"_index":347,"title":{},"body":{"injectables/UrlsService.html":{}}}],["isurl",{"_index":79,"title":{},"body":{"classes/CreateUrlDto.html":{},"miscellaneous/variables.html":{}}}],["json.stringify(message",{"_index":178,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["key",{"_index":121,"title":{},"body":{"classes/CreateUrlsTable1724011503102.html":{}}}],["legend",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/UrlsModule.html":{},"overview.html":{}}}],["length",{"_index":223,"title":{},"body":{"entities/Url.html":{},"injectables/UrlsService.html":{}}}],["license",{"_index":516,"title":{},"body":{"properties.html":{}}}],["logger",{"_index":149,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"controllers/UrlsController.html":{},"injectables/UrlsService.html":{}}}],["logger('urlsservice",{"_index":342,"title":{},"body":{"injectables/UrlsService.html":{}}}],["logger(httpexceptionfilter.name",{"_index":163,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["logger(urlscontroller.name",{"_index":263,"title":{},"body":{"controllers/UrlsController.html":{}}}],["logging",{"_index":539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matching",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUrlDto.html":{},"classes/CreateUrlsTable1724011503102.html":{},"modules/DatabaseModule.html":{},"classes/HttpExceptionFilter.html":{},"classes/URLNotFoundException.html":{},"entities/Url.html":{},"controllers/UrlsController.html":{},"modules/UrlsModule.html":{},"injectables/UrlsService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":80,"title":{},"body":{"classes/CreateUrlDto.html":{},"classes/HttpExceptionFilter.html":{}}}],["messages",{"_index":88,"title":{},"body":{"classes/CreateUrlDto.html":{},"classes/URLNotFoundException.html":{}}}],["messages.ts",{"_index":388,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":423,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":482,"title":{},"body":{"index.html":{}}}],["methods",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateUrlsTable1724011503102.html":{},"classes/HttpExceptionFilter.html":{},"controllers/UrlsController.html":{},"injectables/UrlsService.html":{}}}],["migrationinterface",{"_index":99,"title":{},"body":{"classes/CreateUrlsTable1724011503102.html":{}}}],["migrations",{"_index":476,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["migrations/*.{js,ts",{"_index":542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":428,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":474,"title":{},"body":{"index.html":{}}}],["model",{"_index":500,"title":{},"body":{"index.html":{}}}],["module",{"_index":31,"title":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/UrlsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/UrlsModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":33,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/UrlsModule.html":{},"modules.html":{},"overview.html":{}}}],["name",{"_index":108,"title":{},"body":{"classes/CreateUrlsTable1724011503102.html":{},"classes/HttpExceptionFilter.html":{},"entities/Url.html":{},"controllers/UrlsController.html":{},"injectables/UrlsService.html":{}}}],["needs",{"_index":74,"title":{},"body":{"classes/CreateUrlDto.html":{}}}],["nestjs",{"_index":442,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"classes/HttpExceptionFilter.html":{},"classes/URLNotFoundException.html":{},"controllers/UrlsController.html":{},"modules/UrlsModule.html":{},"injectables/UrlsService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":408,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":409,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":411,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":85,"title":{},"body":{"classes/CreateUrlDto.html":{},"controllers/UrlsController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":413,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":162,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"controllers/UrlsController.html":{},"injectables/UrlsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newurl",{"_index":359,"title":{},"body":{"injectables/UrlsService.html":{}}}],["nodejs",{"_index":440,"title":{},"body":{"index.html":{}}}],["none",{"_index":484,"title":{},"body":{"index.html":{}}}],["note",{"_index":472,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":189,"title":{},"body":{"classes/URLNotFoundException.html":{},"injectables/UrlsService.html":{}}}],["now",{"_index":134,"title":{},"body":{"classes/CreateUrlsTable1724011503102.html":{},"entities/Url.html":{}}}],["npm",{"_index":469,"title":{},"body":{"index.html":{}}}],["null",{"_index":124,"title":{},"body":{"classes/CreateUrlsTable1724011503102.html":{},"injectables/UrlsService.html":{}}}],["nullable",{"_index":207,"title":{},"body":{"entities/Url.html":{}}}],["number",{"_index":201,"title":{},"body":{"entities/Url.html":{},"injectables/UrlsService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["number(process.env.database_port",{"_index":530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":304,"title":{},"body":{"injectables/UrlsService.html":{},"miscellaneous/variables.html":{}}}],["occurred",{"_index":172,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["online",{"_index":492,"title":{},"body":{"index.html":{}}}],["optional",{"_index":109,"title":{},"body":{"classes/CreateUrlsTable1724011503102.html":{},"classes/HttpExceptionFilter.html":{},"controllers/UrlsController.html":{},"injectables/UrlsService.html":{}}}],["original",{"_index":72,"title":{},"body":{"classes/CreateUrlDto.html":{},"controllers/UrlsController.html":{},"injectables/UrlsService.html":{},"index.html":{}}}],["original_url",{"_index":128,"title":{},"body":{"classes/CreateUrlsTable1724011503102.html":{},"entities/Url.html":{}}}],["originalurl",{"_index":69,"title":{},"body":{"classes/CreateUrlDto.html":{},"entities/Url.html":{},"injectables/UrlsService.html":{},"index.html":{}}}],["otherwise",{"_index":332,"title":{},"body":{"injectables/UrlsService.html":{}}}],["out",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/UrlsModule.html":{},"overview.html":{}}}],["overview",{"_index":511,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":405,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":251,"title":{},"body":{"controllers/UrlsController.html":{},"injectables/UrlsService.html":{}}}],["parameters",{"_index":107,"title":{},"body":{"classes/CreateUrlsTable1724011503102.html":{},"classes/HttpExceptionFilter.html":{},"controllers/UrlsController.html":{},"injectables/UrlsService.html":{}}}],["part",{"_index":322,"title":{},"body":{"injectables/UrlsService.html":{}}}],["password",{"_index":536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path",{"_index":183,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["pg",{"_index":420,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["please",{"_index":560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["port",{"_index":529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["port_default",{"_index":399,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":249,"title":{},"body":{"controllers/UrlsController.html":{},"index.html":{}}}],["post()@apioperation({summary",{"_index":239,"title":{},"body":{"controllers/UrlsController.html":{}}}],["postgres",{"_index":527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postgresql",{"_index":443,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":7,"title":{},"body":{"controllers/AppController.html":{}}}],["prerequisites",{"_index":447,"title":{},"body":{"index.html":{}}}],["primary",{"_index":120,"title":{},"body":{"classes/CreateUrlsTable1724011503102.html":{}}}],["primarygeneratedcolumn",{"_index":212,"title":{},"body":{"entities/Url.html":{}}}],["private",{"_index":262,"title":{},"body":{"controllers/UrlsController.html":{},"injectables/UrlsService.html":{}}}],["process.env.api_domain}:${process.env.app_port}/${hash",{"_index":357,"title":{},"body":{"injectables/UrlsService.html":{}}}],["process.env.database_host",{"_index":528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.database_name",{"_index":531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.database_password",{"_index":537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.database_schema",{"_index":533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.database_user",{"_index":535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":446,"title":{},"body":{"index.html":{}}}],["promise",{"_index":110,"title":{},"body":{"classes/CreateUrlsTable1724011503102.html":{},"injectables/UrlsService.html":{}}}],["properties",{"_index":68,"title":{"properties.html":{}},"body":{"classes/CreateUrlDto.html":{},"entities/Url.html":{},"injectables/UrlsService.html":{},"properties.html":{}}}],["property",{"_index":90,"title":{},"body":{"classes/CreateUrlDto.html":{},"miscellaneous/variables.html":{}}}],["provide",{"_index":544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":265,"title":{},"body":{"controllers/UrlsController.html":{}}}],["provided.'})@post",{"_index":247,"title":{},"body":{"controllers/UrlsController.html":{}}}],["providers",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/UrlsModule.html":{},"overview.html":{}}}],["provides",{"_index":436,"title":{},"body":{"index.html":{}}}],["public",{"_index":100,"title":{},"body":{"classes/CreateUrlsTable1724011503102.html":{}}}],["put",{"_index":460,"title":{},"body":{"index.html":{}}}],["queryrunner",{"_index":105,"title":{},"body":{"classes/CreateUrlsTable1724011503102.html":{}}}],["queryrunner.query",{"_index":115,"title":{},"body":{"classes/CreateUrlsTable1724011503102.html":{}}}],["random",{"_index":309,"title":{},"body":{"injectables/UrlsService.html":{}}}],["readonly",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/UrlsController.html":{},"injectables/UrlsService.html":{}}}],["redirect",{"_index":226,"title":{},"body":{"controllers/UrlsController.html":{},"index.html":{}}}],["redirect(@param('hash",{"_index":270,"title":{},"body":{"controllers/UrlsController.html":{}}}],["redirect(hash",{"_index":228,"title":{},"body":{"controllers/UrlsController.html":{}}}],["reflect",{"_index":422,"title":{},"body":{"dependencies.html":{}}}],["relationship",{"_index":498,"title":{},"body":{"index.html":{}}}],["repository",{"_index":292,"title":{},"body":{"injectables/UrlsService.html":{}}}],["request",{"_index":158,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"index.html":{}}}],["request.url",{"_index":184,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["required",{"_index":559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res",{"_index":229,"title":{},"body":{"controllers/UrlsController.html":{}}}],["res.redirect(result.url",{"_index":274,"title":{},"body":{"controllers/UrlsController.html":{}}}],["reset",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/UrlsModule.html":{},"overview.html":{}}}],["response",{"_index":159,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"controllers/UrlsController.html":{},"index.html":{}}}],["response.status(status).json",{"_index":179,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["result",{"_index":272,"title":{},"body":{"controllers/UrlsController.html":{}}}],["results",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUrlDto.html":{},"classes/CreateUrlsTable1724011503102.html":{},"modules/DatabaseModule.html":{},"classes/HttpExceptionFilter.html":{},"classes/URLNotFoundException.html":{},"entities/Url.html":{},"controllers/UrlsController.html":{},"modules/UrlsModule.html":{},"injectables/UrlsService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retrieves",{"_index":320,"title":{},"body":{"injectables/UrlsService.html":{}}}],["return",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/UrlsController.html":{},"injectables/UrlsService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateUrlsTable1724011503102.html":{},"classes/HttpExceptionFilter.html":{},"controllers/UrlsController.html":{},"injectables/UrlsService.html":{}}}],["route",{"_index":481,"title":{},"body":{"index.html":{}}}],["routes",{"_index":480,"title":{},"body":{"index.html":{}}}],["run",{"_index":445,"title":{},"body":{"index.html":{}}}],["run:example",{"_index":470,"title":{},"body":{"index.html":{}}}],["running",{"_index":473,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":425,"title":{},"body":{"dependencies.html":{}}}],["saved",{"_index":495,"title":{},"body":{"index.html":{}}}],["schema",{"_index":532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scope",{"_index":503,"title":{},"body":{"index.html":{}}}],["serial",{"_index":119,"title":{},"body":{"classes/CreateUrlsTable1724011503102.html":{}}}],["service",{"_index":438,"title":{},"body":{"index.html":{}}}],["short",{"_index":298,"title":{},"body":{"injectables/UrlsService.html":{}}}],["shorten",{"_index":227,"title":{},"body":{"controllers/UrlsController.html":{}}}],["shorten(@body",{"_index":266,"title":{},"body":{"controllers/UrlsController.html":{}}}],["shorten(createurldto",{"_index":238,"title":{},"body":{"controllers/UrlsController.html":{}}}],["shortened",{"_index":75,"title":{},"body":{"classes/CreateUrlDto.html":{},"controllers/UrlsController.html":{},"injectables/UrlsService.html":{},"index.html":{}}}],["shortener",{"_index":433,"title":{},"body":{"index.html":{}}}],["shortener.git",{"_index":466,"title":{},"body":{"index.html":{}}}],["shortening",{"_index":437,"title":{},"body":{"index.html":{}}}],["shorturl",{"_index":356,"title":{},"body":{"injectables/UrlsService.html":{},"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUrlDto.html":{},"classes/CreateUrlsTable1724011503102.html":{},"modules/DatabaseModule.html":{},"classes/HttpExceptionFilter.html":{},"classes/URLNotFoundException.html":{},"entities/Url.html":{},"controllers/UrlsController.html":{},"modules/UrlsModule.html":{},"injectables/UrlsService.html":{}}}],["source.ts",{"_index":392,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["specified",{"_index":310,"title":{},"body":{"injectables/UrlsService.html":{}}}],["src/.../constants.ts",{"_index":519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../data",{"_index":520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../database.providers.ts",{"_index":521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../error",{"_index":522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":430,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../url.providers.ts",{"_index":523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../validation",{"_index":524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":15,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":60,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":61,"title":{},"body":{"injectables/AppService.html":{}}}],["src/common/constants/constants.ts",{"_index":383,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/constants/validation",{"_index":387,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/errors/custom",{"_index":186,"title":{},"body":{"classes/URLNotFoundException.html":{},"controllers/UrlsController.html":{},"injectables/UrlsService.html":{},"coverage.html":{}}}],["src/common/errors/error",{"_index":389,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/filters/http",{"_index":142,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/database/data",{"_index":391,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/database.module",{"_index":284,"title":{},"body":{"modules/UrlsModule.html":{}}}],["src/database/database.module.ts",{"_index":138,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/database/database.providers.ts",{"_index":395,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/migrations/1724011503102",{"_index":94,"title":{},"body":{"classes/CreateUrlsTable1724011503102.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":396,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/urls/dto/create",{"_index":66,"title":{},"body":{"classes/CreateUrlDto.html":{},"coverage.html":{}}}],["src/urls/entities/url.entity.ts",{"_index":195,"title":{},"body":{"entities/Url.html":{},"coverage.html":{}}}],["src/urls/entities/url.entity.ts:13",{"_index":213,"title":{},"body":{"entities/Url.html":{}}}],["src/urls/entities/url.entity.ts:16",{"_index":218,"title":{},"body":{"entities/Url.html":{}}}],["src/urls/entities/url.entity.ts:19",{"_index":211,"title":{},"body":{"entities/Url.html":{}}}],["src/urls/entities/url.entity.ts:22",{"_index":214,"title":{},"body":{"entities/Url.html":{}}}],["src/urls/entities/url.entity.ts:25",{"_index":203,"title":{},"body":{"entities/Url.html":{}}}],["src/urls/entities/url.entity.ts:32",{"_index":206,"title":{},"body":{"entities/Url.html":{}}}],["src/urls/entities/url.entity.ts:39",{"_index":215,"title":{},"body":{"entities/Url.html":{}}}],["src/urls/entities/url.entity.ts:46",{"_index":208,"title":{},"body":{"entities/Url.html":{}}}],["src/urls/entities/url.providers.ts",{"_index":401,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/urls/urls.controller.ts",{"_index":225,"title":{},"body":{"controllers/UrlsController.html":{},"coverage.html":{}}}],["src/urls/urls.controller.ts:33",{"_index":248,"title":{},"body":{"controllers/UrlsController.html":{}}}],["src/urls/urls.controller.ts:42",{"_index":236,"title":{},"body":{"controllers/UrlsController.html":{}}}],["src/urls/urls.module.ts",{"_index":280,"title":{},"body":{"modules/UrlsModule.html":{}}}],["src/urls/urls.service.ts",{"_index":285,"title":{},"body":{"injectables/UrlsService.html":{},"coverage.html":{}}}],["src/urls/urls.service.ts:105",{"_index":323,"title":{},"body":{"injectables/UrlsService.html":{}}}],["src/urls/urls.service.ts:126",{"_index":307,"title":{},"body":{"injectables/UrlsService.html":{}}}],["src/urls/urls.service.ts:13",{"_index":293,"title":{},"body":{"injectables/UrlsService.html":{}}}],["src/urls/urls.service.ts:145",{"_index":329,"title":{},"body":{"injectables/UrlsService.html":{}}}],["src/urls/urls.service.ts:27",{"_index":296,"title":{},"body":{"injectables/UrlsService.html":{}}}],["src/urls/urls.service.ts:63",{"_index":319,"title":{},"body":{"injectables/UrlsService.html":{}}}],["src/urls/urls.service.ts:87",{"_index":335,"title":{},"body":{"injectables/UrlsService.html":{}}}],["stack",{"_index":439,"title":{},"body":{"index.html":{}}}],["start:docker",{"_index":471,"title":{},"body":{"index.html":{}}}],["started",{"_index":432,"title":{"index.html":{}},"body":{}}],["statements",{"_index":381,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":173,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"controllers/UrlsController.html":{}}}],["statuscode",{"_index":180,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["string",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateUrlDto.html":{},"entities/Url.html":{},"controllers/UrlsController.html":{},"injectables/UrlsService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["string})@apiresponse({status",{"_index":244,"title":{},"body":{"controllers/UrlsController.html":{}}}],["string})@isnotempty({message",{"_index":78,"title":{},"body":{"classes/CreateUrlDto.html":{}}}],["successfully",{"_index":243,"title":{},"body":{"controllers/UrlsController.html":{}}}],["summary",{"_index":264,"title":{},"body":{"controllers/UrlsController.html":{}}}],["super(error_messages.url_not_found",{"_index":192,"title":{},"body":{"classes/URLNotFoundException.html":{}}}],["support",{"_index":506,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":507,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":487,"title":{},"body":{"index.html":{}}}],["synchronize",{"_index":538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":116,"title":{},"body":{"classes/CreateUrlsTable1724011503102.html":{},"coverage.html":{}}}],["table.ts",{"_index":97,"title":{},"body":{"classes/CreateUrlsTable1724011503102.html":{},"coverage.html":{}}}],["table.ts:19",{"_index":106,"title":{},"body":{"classes/CreateUrlsTable1724011503102.html":{}}}],["table.ts:4",{"_index":112,"title":{},"body":{"classes/CreateUrlsTable1724011503102.html":{}}}],["tables",{"_index":477,"title":{},"body":{"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":404,"title":{},"body":{"coverage.html":{}}}],["this._urlrepository.create",{"_index":360,"title":{},"body":{"injectables/UrlsService.html":{}}}],["this._urlrepository.findone",{"_index":355,"title":{},"body":{"injectables/UrlsService.html":{}}}],["this._urlrepository.findoneorfail",{"_index":368,"title":{},"body":{"injectables/UrlsService.html":{}}}],["this._urlrepository.findoneorfail(where",{"_index":365,"title":{},"body":{"injectables/UrlsService.html":{}}}],["this._urlrepository.save(newurl",{"_index":362,"title":{},"body":{"injectables/UrlsService.html":{}}}],["this._urlrepository.save(url",{"_index":370,"title":{},"body":{"injectables/UrlsService.html":{}}}],["this.appservice.gethello",{"_index":28,"title":{},"body":{"controllers/AppController.html":{}}}],["this.generatehash",{"_index":373,"title":{},"body":{"injectables/UrlsService.html":{}}}],["this.getvalidhash",{"_index":358,"title":{},"body":{"injectables/UrlsService.html":{}}}],["this.hashinuse(hash",{"_index":375,"title":{},"body":{"injectables/UrlsService.html":{}}}],["this.increaseclickcount(url.id",{"_index":366,"title":{},"body":{"injectables/UrlsService.html":{}}}],["this.logger.error",{"_index":177,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["this.logger.error(error",{"_index":275,"title":{},"body":{"controllers/UrlsController.html":{},"injectables/UrlsService.html":{}}}],["this.urlsservice.create(createurldto",{"_index":267,"title":{},"body":{"controllers/UrlsController.html":{}}}],["this.urlsservice.getoriginalurlbyhash(hash",{"_index":273,"title":{},"body":{"controllers/UrlsController.html":{}}}],["throw",{"_index":276,"title":{},"body":{"controllers/UrlsController.html":{},"injectables/UrlsService.html":{}}}],["timestamp",{"_index":181,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["timestamptz",{"_index":133,"title":{},"body":{"classes/CreateUrlsTable1724011503102.html":{},"entities/Url.html":{}}}],["transfer",{"_index":352,"title":{},"body":{"injectables/UrlsService.html":{}}}],["transformer",{"_index":415,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"entities/Url.html":{},"injectables/UrlsService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":271,"title":{},"body":{"controllers/UrlsController.html":{},"injectables/UrlsService.html":{}}}],["type",{"_index":70,"title":{},"body":{"classes/CreateUrlDto.html":{},"classes/CreateUrlsTable1724011503102.html":{},"classes/HttpExceptionFilter.html":{},"entities/Url.html":{},"controllers/UrlsController.html":{},"injectables/UrlsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":113,"title":{},"body":{"classes/CreateUrlsTable1724011503102.html":{},"entities/Url.html":{},"injectables/UrlsService.html":{},"dependencies.html":{},"index.html":{}}}],["typeormdatasource",{"_index":394,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":410,"title":{},"body":{"dependencies.html":{}}}],["unexpected",{"_index":170,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["unique",{"_index":127,"title":{},"body":{"classes/CreateUrlsTable1724011503102.html":{},"entities/Url.html":{}}}],["unknown",{"_index":237,"title":{},"body":{"controllers/UrlsController.html":{}}}],["unlicensed",{"_index":517,"title":{},"body":{"properties.html":{}}}],["unused",{"_index":327,"title":{},"body":{"injectables/UrlsService.html":{}}}],["up",{"_index":103,"title":{},"body":{"classes/CreateUrlsTable1724011503102.html":{}}}],["up(queryrunner",{"_index":111,"title":{},"body":{"classes/CreateUrlsTable1724011503102.html":{}}}],["updated_at",{"_index":135,"title":{},"body":{"classes/CreateUrlsTable1724011503102.html":{},"entities/Url.html":{}}}],["updatedat",{"_index":199,"title":{},"body":{"entities/Url.html":{}}}],["url",{"_index":73,"title":{"entities/Url.html":{}},"body":{"classes/CreateUrlDto.html":{},"entities/Url.html":{},"controllers/UrlsController.html":{},"injectables/UrlsService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["url'})@apibody({type",{"_index":240,"title":{},"body":{"controllers/UrlsController.html":{}}}],["url'})@apiresponse({status",{"_index":231,"title":{},"body":{"controllers/UrlsController.html":{}}}],["url.'})@apiresponse({status",{"_index":233,"title":{},"body":{"controllers/UrlsController.html":{}}}],["url.clickcount",{"_index":369,"title":{},"body":{"injectables/UrlsService.html":{}}}],["url.dto",{"_index":259,"title":{},"body":{"controllers/UrlsController.html":{},"injectables/UrlsService.html":{}}}],["url.dto.ts",{"_index":67,"title":{},"body":{"classes/CreateUrlDto.html":{},"coverage.html":{}}}],["url.dto.ts:15",{"_index":81,"title":{},"body":{"classes/CreateUrlDto.html":{}}}],["url.originalurl",{"_index":367,"title":{},"body":{"injectables/UrlsService.html":{}}}],["url_not_found",{"_index":557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urlexists",{"_index":354,"title":{},"body":{"injectables/UrlsService.html":{}}}],["urlid",{"_index":340,"title":{},"body":{"injectables/UrlsService.html":{}}}],["urlnotfoundexception",{"_index":185,"title":{"classes/URLNotFoundException.html":{}},"body":{"classes/URLNotFoundException.html":{},"controllers/UrlsController.html":{},"injectables/UrlsService.html":{},"coverage.html":{}}}],["urlproviders",{"_index":282,"title":{},"body":{"modules/UrlsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["urls",{"_index":96,"title":{},"body":{"classes/CreateUrlsTable1724011503102.html":{},"coverage.html":{},"index.html":{}}}],["urls.controller",{"_index":281,"title":{},"body":{"modules/UrlsModule.html":{}}}],["urls.service",{"_index":257,"title":{},"body":{"controllers/UrlsController.html":{},"modules/UrlsModule.html":{}}}],["urls/urls.module",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["urls_repository",{"_index":345,"title":{},"body":{"injectables/UrlsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["urlsaved",{"_index":361,"title":{},"body":{"injectables/UrlsService.html":{}}}],["urlsaved.id",{"_index":363,"title":{},"body":{"injectables/UrlsService.html":{}}}],["urlscontroller",{"_index":224,"title":{"controllers/UrlsController.html":{}},"body":{"controllers/UrlsController.html":{},"modules/UrlsModule.html":{},"coverage.html":{}}}],["urlsmodule",{"_index":44,"title":{"modules/UrlsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UrlsModule.html":{},"modules.html":{},"overview.html":{}}}],["urlsservice",{"_index":256,"title":{"injectables/UrlsService.html":{}},"body":{"controllers/UrlsController.html":{},"modules/UrlsModule.html":{},"injectables/UrlsService.html":{},"coverage.html":{},"overview.html":{}}}],["use",{"_index":326,"title":{},"body":{"injectables/UrlsService.html":{}}}],["usefactory",{"_index":545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user_id",{"_index":122,"title":{},"body":{"classes/CreateUrlsTable1724011503102.html":{},"entities/Url.html":{}}}],["userid",{"_index":200,"title":{},"body":{"entities/Url.html":{},"injectables/UrlsService.html":{}}}],["username",{"_index":534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["using",{"_index":311,"title":{},"body":{"injectables/UrlsService.html":{},"index.html":{}}}],["valid",{"_index":324,"title":{},"body":{"injectables/UrlsService.html":{},"miscellaneous/variables.html":{}}}],["validationmessages",{"_index":86,"title":{},"body":{"classes/CreateUrlDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validationmessages.isurl(property",{"_index":92,"title":{},"body":{"classes/CreateUrlDto.html":{}}}],["validationmessages.required(property",{"_index":91,"title":{},"body":{"classes/CreateUrlDto.html":{}}}],["validator",{"_index":83,"title":{},"body":{"classes/CreateUrlDto.html":{},"dependencies.html":{}}}],["value",{"_index":314,"title":{},"body":{"injectables/UrlsService.html":{},"miscellaneous/variables.html":{}}}],["varchar",{"_index":126,"title":{},"body":{"classes/CreateUrlsTable1724011503102.html":{}}}],["variable",{"_index":384,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":450,"title":{"miscellaneous/variables.html":{}},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":303,"title":{},"body":{"injectables/UrlsService.html":{},"properties.html":{}}}],["void",{"_index":156,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["world",{"_index":63,"title":{},"body":{"injectables/AppService.html":{}}}],["worry",{"_index":479,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/UrlsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /app\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller('/app')\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nUrlsModule\n\nUrlsModule\n\nAppModule -->\n\nUrlsModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                        \n                            UrlsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ConfigModule } from '@nestjs/config';\nimport { UrlsModule } from './urls/urls.module';\nimport { DatabaseModule } from './database/database.module';\n\n@Module({\n  imports: [\n    DatabaseModule,\n    ConfigModule.forRoot({\n      isGlobal: true,\n    }),\n    UrlsModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUrlDto.html":{"url":"classes/CreateUrlDto.html","title":"class - CreateUrlDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUrlDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/urls/dto/create-url.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                originalUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        originalUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The original URL that needs to be shortened', example: 'https://google.com/very/long/url', type: String})@IsNotEmpty({message:  => })@IsUrl({}, {message:  => })\n                        \n                    \n                \n                    \n                        \n                                Defined in src/urls/dto/create-url.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsUrl } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { ValidationMessages } from '../../common/constants/validation-messages';\n\nexport class CreateUrlDto {\n  @ApiProperty({\n    description: 'The original URL that needs to be shortened',\n    example: 'https://google.com/very/long/url',\n    type: String,\n  })\n  @IsNotEmpty({\n    message: ({ property }) => ValidationMessages.required(property),\n  })\n  @IsUrl({}, { message: ({ property }) => ValidationMessages.isUrl(property) })\n  originalUrl: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUrlsTable1724011503102.html":{"url":"classes/CreateUrlsTable1724011503102.html","title":"class - CreateUrlsTable1724011503102","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUrlsTable1724011503102\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1724011503102-create-urls-table.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1724011503102-create-urls-table.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1724011503102-create-urls-table.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateUrlsTable1724011503102 implements MigrationInterface {\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`\n            CREATE TABLE IF NOT EXISTS urls (\n                id SERIAL PRIMARY KEY,\n                user_id INT NULL, \n                hash VARCHAR UNIQUE NOT NULL,\n                original_url VARCHAR NOT NULL,\n                click_count INT NOT NULL DEFAULT 0,\n                created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),\n                updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),\n                deleted_at TIMESTAMPTZ\n            )\n        `);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`\n            DROP TABLE IF EXISTS \"urls\"; \n        `);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { databaseProviders } from './database.providers';\n\n@Module({\n  providers: [...databaseProviders],\n  exports: [...databaseProviders],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filters/http-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger)\n                    \n                \n                        \n                            \n                                Defined in src/common/filters/http-exception.filter.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/filters/http-exception.filter.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        HttpException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpException,\n  HttpStatus,\n  Logger,\n} from '@nestjs/common';\nimport { Request, Response } from 'express';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  constructor(private readonly logger = new Logger(HttpExceptionFilter.name)) {}\n\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const message =\n      exception.getResponse()['message'] || 'Unexpected error occurred';\n    const status =\n      exception instanceof HttpException\n        ? exception.getStatus()\n        : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    this.logger.error(\n      `Status: ${status}, Error Message: ${JSON.stringify(message)}`,\n    );\n\n    response.status(status).json({\n      statusCode: status,\n      timestamp: new Date().toISOString(),\n      path: request.url,\n      message,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/URLNotFoundException.html":{"url":"classes/URLNotFoundException.html","title":"class - URLNotFoundException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  URLNotFoundException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/errors/custom-errors.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        NotFoundException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/errors/custom-errors.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException } from '@nestjs/common';\nimport { ERROR_MESSAGES } from './error-messages';\n\nexport class URLNotFoundException extends NotFoundException {\n  constructor() {\n    super(ERROR_MESSAGES.URL_NOT_FOUND);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Url.html":{"url":"entities/Url.html","title":"entity - Url","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Url\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/urls/entities/url.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                clickCount\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                hash\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                originalUrl\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        clickCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'click_count'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/urls/entities/url.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamptz', name: 'created_at', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/urls/entities/url.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamptz', name: 'deleted_at', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/urls/entities/url.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        hash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 10, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/urls/entities/url.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/urls/entities/url.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        originalUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'original_url'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/urls/entities/url.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamptz', name: 'updated_at', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/urls/entities/url.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'integer', nullable: true, name: 'user_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/urls/entities/url.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  PrimaryGeneratedColumn,\n  CreateDateColumn,\n  Index,\n} from 'typeorm';\n\n@Index('urls_hash_index', ['hash'], { unique: true })\n@Entity('urls')\nexport class Url {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ type: 'integer', nullable: true, name: 'user_id' })\n  userId: number;\n\n  @Column({ length: 10, unique: true })\n  hash: string;\n\n  @Column({ name: 'original_url' })\n  originalUrl: string;\n\n  @Column({ name: 'click_count' })\n  clickCount: number;\n\n  @CreateDateColumn({\n    type: 'timestamptz',\n    name: 'created_at',\n    default: () => 'now()',\n  })\n  createdAt: Date;\n\n  @CreateDateColumn({\n    type: 'timestamptz',\n    name: 'updated_at',\n    default: () => 'now()',\n  })\n  updatedAt: Date;\n\n  @CreateDateColumn({\n    type: 'timestamptz',\n    name: 'deleted_at',\n    nullable: true,\n  })\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UrlsController.html":{"url":"controllers/UrlsController.html","title":"controller - UrlsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UrlsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/urls/urls.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                redirect\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                shorten\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        redirect\n                        \n                    \n                \n            \n            \n                \n                        \n                    redirect(hash: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':hash')@ApiOperation({summary: 'Redirect to the original URL'})@ApiResponse({status: 200, description: 'Redirect to the original URL.'})@ApiResponse({status: 404, description: 'URL not found.'})@Get(':hash')\n                \n            \n\n                    \n                        \n                            Defined in src/urls/urls.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                hash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        shorten\n                        \n                    \n                \n            \n            \n                \n                        \n                    shorten(createUrlDto: CreateUrlDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create a shortened URL'})@ApiBody({type: CreateUrlDto})@ApiResponse({status: 201, description: 'The URL has been successfully shortened.', type: String})@ApiResponse({status: 400, description: 'Invalid URL provided.'})@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/urls/urls.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUrlDto\n                                            \n                                                            CreateUrlDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Param,\n  Logger,\n  Res,\n} from '@nestjs/common';\nimport { ApiTags, ApiOperation, ApiBody, ApiResponse } from '@nestjs/swagger';\nimport { UrlsService } from './urls.service';\nimport { CreateUrlDto } from './dto/create-url.dto';\nimport { URLNotFoundException } from 'src/common/errors/custom-errors';\nimport { Response } from 'express';\n\n@ApiTags('URLs')\n@Controller('')\nexport class UrlsController {\n  private logger = new Logger(UrlsController.name);\n\n  constructor(private readonly urlsService: UrlsService) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Create a shortened URL' })\n  @ApiBody({ type: CreateUrlDto })\n  @ApiResponse({\n    status: 201,\n    description: 'The URL has been successfully shortened.',\n    type: String,\n  })\n  @ApiResponse({ status: 400, description: 'Invalid URL provided.' })\n  @Post()\n  shorten(@Body() createUrlDto: CreateUrlDto) {\n    return this.urlsService.create(createUrlDto);\n  }\n\n  @Get(':hash')\n  @ApiOperation({ summary: 'Redirect to the original URL' })\n  @ApiResponse({ status: 200, description: 'Redirect to the original URL.' })\n  @ApiResponse({ status: 404, description: 'URL not found.' })\n  @Get(':hash')\n  async redirect(@Param('hash') hash: string, @Res() res: Response) {\n    try {\n      const result = await this.urlsService.getOriginalUrlByHash(hash);\n      return res.redirect(result.url);\n    } catch (error) {\n      this.logger.error(error);\n\n      if (error instanceof URLNotFoundException) {\n        throw new URLNotFoundException();\n      }\n\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UrlsModule.html":{"url":"modules/UrlsModule.html","title":"module - UrlsModule","body":"\n                   \n\n\n\n\n    Modules\n    UrlsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UrlsModule\n\n\n\ncluster_UrlsModule_imports\n\n\n\ncluster_UrlsModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nUrlsModule\n\nUrlsModule\n\nUrlsModule -->\n\nDatabaseModule->UrlsModule\n\n\n\n\n\nUrlsService\n\nUrlsService\n\nUrlsModule -->\n\nUrlsService->UrlsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/urls/urls.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UrlsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UrlsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UrlsService } from './urls.service';\nimport { UrlsController } from './urls.controller';\nimport { urlProviders } from './entities/url.providers';\nimport { DatabaseModule } from 'src/database/database.module';\n\n@Module({\n  imports: [DatabaseModule],\n  controllers: [UrlsController],\n  providers: [...urlProviders, UrlsService],\n})\nexport class UrlsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UrlsService.html":{"url":"injectables/UrlsService.html","title":"injectable - UrlsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UrlsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/urls/urls.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                generateHash\n                            \n                            \n                                    Async\n                                getOriginalUrlByHash\n                            \n                            \n                                    Async\n                                getValidHash\n                            \n                            \n                                    Async\n                                hashInUse\n                            \n                            \n                                    Async\n                                increaseClickCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_urlRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/urls/urls.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _urlRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(undefined: CreateUrlDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/urls/urls.service.ts:27\n                        \n                    \n\n\n            \n                \n                        Creates a short URL from a given original URL. If the URL already exists in the database,\nit returns the existing shortened version.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            CreateUrlDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nAn object containing the ID and the shortened URL.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateHash\n                        \n                    \n                \n            \n            \n                \ngenerateHash(length: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/urls/urls.service.ts:126\n                        \n                    \n\n\n            \n                \n                        Generates a random hash of a specified length using base62 characters.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                length\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    6\n                                            \n\n                                            \n                                                    \nThe desired length of the hash. Defaults to 6 if not specified.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \nA random hash.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getOriginalUrlByHash\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOriginalUrlByHash(hash: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/urls/urls.service.ts:63\n                        \n                    \n\n\n            \n                \n                        Retrieves the original URL associated with a given hash.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                hash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe hash part of the short URL.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nAn object containing the original URL.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getValidHash\n                        \n                    \n                \n            \n            \n                \n                        \n                    getValidHash()\n                \n            \n\n\n                    \n                        \n                            Defined in src/urls/urls.service.ts:105\n                        \n                    \n\n\n            \n                \n                        Generates a valid hash that is not currently in use.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nA valid unused hash.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        hashInUse\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashInUse(hash: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/urls/urls.service.ts:145\n                        \n                    \n\n\n            \n                \n                        Checks if a given hash is already in use.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                hash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe hash to check.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nTrue if the hash is in use, otherwise false.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        increaseClickCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    increaseClickCount(urlId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/urls/urls.service.ts:87\n                        \n                    \n\n\n            \n                \n                        Increments the click count of a URL by 1.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                urlId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the URL to be incremented.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('UrlsService')\n                    \n                \n                    \n                        \n                                Defined in src/urls/urls.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger, NotFoundException } from '@nestjs/common';\nimport { CreateUrlDto } from './dto/create-url.dto';\nimport {\n  BASE62_CHARACTERS,\n  URLS_REPOSITORY,\n} from '../common/constants/constants';\nimport { Repository, IsNull, EntityNotFoundError } from 'typeorm';\nimport { Url } from './entities/url.entity';\nimport { URLNotFoundException } from 'src/common/errors/custom-errors';\n\n@Injectable()\nexport class UrlsService {\n  private logger = new Logger('UrlsService');\n\n  constructor(\n    @Inject(URLS_REPOSITORY)\n    private readonly _urlRepository: Repository,\n  ) {}\n\n  /**\n   * Creates a short URL from a given original URL. If the URL already exists in the database,\n   * it returns the existing shortened version.\n   *\n   * @param {CreateUrlDto} createUrlDto - Data Transfer Object for creating a URL.\n   * @returns {Promise} - An object containing the ID and the shortened URL.\n   */\n  async create({\n    originalUrl,\n  }: CreateUrlDto): Promise {\n    const urlExists = await this._urlRepository.findOne({\n      where: {\n        originalUrl,\n        userId: IsNull(),\n      },\n    });\n\n    if (urlExists) {\n      const { id, hash } = urlExists;\n      return {\n        id,\n        shortUrl: `${process.env.API_DOMAIN}:${process.env.APP_PORT}/${hash}`,\n      };\n    }\n\n    const hash = await this.getValidHash();\n    const newUrl = this._urlRepository.create({\n      originalUrl,\n      hash,\n    });\n\n    const urlSaved = await this._urlRepository.save(newUrl);\n    const shortUrl = `${process.env.API_DOMAIN}:${process.env.APP_PORT}/${hash}`;\n\n    return { shortUrl, id: urlSaved.id };\n  }\n\n  /**\n   * Retrieves the original URL associated with a given hash.\n   *\n   * @param {string} hash - The hash part of the short URL.\n   * @returns {Promise} - An object containing the original URL.\n   */\n  async getOriginalUrlByHash(hash: string): Promise {\n    try {\n      if (!hash || hash.length === 0) return null;\n\n      const where = { where: { hash } };\n      const url = await this._urlRepository.findOneOrFail(where);\n\n      this.increaseClickCount(url.id);\n\n      return { url: url.originalUrl };\n    } catch (error) {\n      if (error instanceof EntityNotFoundError) {\n        throw new URLNotFoundException();\n      }\n\n      throw error;\n    }\n  }\n\n  /**\n   * Increments the click count of a URL by 1.\n   *\n   * @param {number} urlId - The ID of the URL to be incremented.\n   */\n  async increaseClickCount(urlId: number): Promise {\n    try {\n      const url = await this._urlRepository.findOneOrFail({\n        where: { id: urlId },\n      });\n\n      url.clickCount += 1;\n      await this._urlRepository.save(url);\n    } catch (error) {\n      this.logger.error(error);\n    }\n  }\n\n  /**\n   * Generates a valid hash that is not currently in use.\n   *\n   * @returns {Promise} - A valid unused hash.\n   */\n  async getValidHash(): Promise {\n    let hashValid = '';\n\n    while (hashValid.length === 0) {\n      const hash = this.generateHash();\n      const isInUse = await this.hashInUse(hash);\n      if (!isInUse) {\n        hashValid = hash;\n        break;\n      }\n    }\n\n    return hashValid;\n  }\n\n  /**\n   * Generates a random hash of a specified length using base62 characters.\n   *\n   * @param {number} length - The desired length of the hash. Defaults to 6 if not specified.\n   * @returns {string} - A random hash.\n   */\n  generateHash(length: number = 6): string {\n    if (length } - True if the hash is in use, otherwise false.\n   */\n  async hashInUse(hash: string): Promise {\n    if (!hash || hash.length === 0) return false;\n\n    const hashExists = await this._urlRepository.findOne({ where: { hash } });\n\n    if (hashExists) return true;\n\n    return false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/constants/constants.ts\n            \n            variable\n            BASE62_CHARACTERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/constants/constants.ts\n            \n            variable\n            DATA_SOURCE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/constants/constants.ts\n            \n            variable\n            URLS_REPOSITORY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/constants/validation-messages.ts\n            \n            variable\n            ValidationMessages\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/errors/custom-errors.ts\n            \n            class\n            URLNotFoundException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/errors/error-messages.ts\n            \n            variable\n            ERROR_MESSAGES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/filters/http-exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database/data-source.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/database.providers.ts\n            \n            variable\n            databaseProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/migrations/1724011503102-create-urls-table.ts\n            \n            class\n            CreateUrlsTable1724011503102\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            DOMAIN_DEFAULT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            PORT_DEFAULT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/urls/dto/create-url.dto.ts\n            \n            class\n            CreateUrlDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/urls/entities/url.entity.ts\n            \n            entity\n            Url\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/urls/entities/url.entity.ts\n            \n            class\n            Url\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/urls/entities/url.providers.ts\n            \n            variable\n            urlProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/urls/urls.controller.ts\n            \n            controller\n            UrlsController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/urls/urls.service.ts\n            \n            injectable\n            UrlsService\n            \n                66 %\n                (6/9)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.2.3\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.4.0\n        \n            @nestjs/typeorm : ^10.0.2\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            dotenv : ^16.4.5\n        \n            pg : ^8.12.0\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.20\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nurl-shortener\n\nAbout\nURL Shortener is a backend application that provides a URL shortening service.\n\n\nStack\n\nNodeJS: 20.x\nNestJs: ^10.0.0\nTypeOrm: ^0.3.20\nPostgreSQL: ^8.12.0\n\nFeatures\n\nURL shortening\nClick count on shortened URLs\n\nHow to Run the Project\nPrerequisites\n\nNodeJS: 20.x\nDocker\n\nEnvironment variables\nExample :APP_PORT=3001\nAPI_DOMAIN=http://localhost\nDATABASE_HOST=\nDATABASE_PORT=5432\nDATABASE_NAME=\nDATABASE_USER=\nDATABASE_PASSWORD=\nDATABASE_SCHEMA=public\nWhen using docker-compose, put db-pg in DATABASE_HOST\n\nRun in Docker\n\nClone:Example :git clone https://github.com/jonlima/url-shortener.git\nInstall the dependencies:Example :npm install\nRun:Example :npm run start:docker\n\n\n[!NOTE]  \nWhen running in start:docker mode, the application will execute the migrations and create the tables, so don't worry about the database.\n\nRoutes\nURLs Module\n\n\n\nRoute\nMethod\nRequest Body\nResponse Body\nHeaders\n\n\n\n\n/\nPOST\n{ \"originalUrl\": \"string\" }\n{ \"id\": \"number\", \"shortUrl\": \"string\" }\nNone\n\n\n/:hash\nGET\nNone\nRedirect to original URL\nNone\n\n\n\nDocumentation\nHow to access and generate project documentation (Swagger and Compodoc).\n\nAccess the API documentation (Swagger) at: /doc or /doc/json\nOnline access here\n\nCompodoc:\nRun\nExample :npm run compodoc\n[!NOTE]\nThe generated documentation will be saved in the docs folder\n\nEntity-Relationship (ER) model (Complete)\n\n\nFuture Scope\n\n\nAutor\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UrlsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_UrlsModule\n\n\n\ncluster_UrlsModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nUrlsModule\n\nUrlsModule\n\nUrlsModule -->\n\nDatabaseModule->UrlsModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\nAppModule -->\n\nUrlsModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nUrlsService\n\nUrlsService\n\nUrlsModule -->\n\nUrlsService->UrlsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    1 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BASE62_CHARACTERS   (src/.../constants.ts)\n                        \n                        \n                            config   (src/.../data-source.ts)\n                        \n                        \n                            DATA_SOURCE   (src/.../constants.ts)\n                        \n                        \n                            databaseProviders   (src/.../database.providers.ts)\n                        \n                        \n                            DOMAIN_DEFAULT   (src/.../main.ts)\n                        \n                        \n                            ERROR_MESSAGES   (src/.../error-messages.ts)\n                        \n                        \n                            PORT_DEFAULT   (src/.../main.ts)\n                        \n                        \n                            TypeormDataSource   (src/.../data-source.ts)\n                        \n                        \n                            urlProviders   (src/.../url.providers.ts)\n                        \n                        \n                            URLS_REPOSITORY   (src/.../constants.ts)\n                        \n                        \n                            ValidationMessages   (src/.../validation-messages.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/constants/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BASE62_CHARACTERS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATA_SOURCE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'DATA_SOURCE'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        URLS_REPOSITORY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'URLS_REPOSITORY'\n                    \n                \n\n\n        \n    \n\n    src/database/data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DataSourceOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  type: 'postgres',\n  host: process.env.DATABASE_HOST,\n  port: Number(process.env.DATABASE_PORT),\n  database: process.env.DATABASE_NAME,\n  schema: process.env.DATABASE_SCHEMA,\n  username: process.env.DATABASE_USER,\n  password: process.env.DATABASE_PASSWORD,\n  synchronize: false,\n  logging: true,\n  entities: [__dirname + '/../**/*.entity.{js,ts}'],\n  migrations: [__dirname + '/migrations/*.{js,ts}'],\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DataSource(config)\n                    \n                \n\n\n        \n    \n\n    src/database/database.providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        databaseProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    provide: DATA_SOURCE,\n    useFactory: async (configService: ConfigService) => {\n      const dataSource = new DataSource({\n        type: 'postgres',\n        host: configService.get('DATABASE_HOST'),\n        port: configService.get('DATABASE_PORT'),\n        database: configService.get('DATABASE_NAME'),\n        schema: configService.get('DATABASE_SCHEMA'),\n        username: configService.get('DATABASE_USER'),\n        password: configService.get('DATABASE_PASSWORD'),\n        synchronize: false,\n        logging: true,\n        entities: [Url],\n      });\n\n      return dataSource.initialize();\n    },\n    inject: [ConfigService],\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DOMAIN_DEFAULT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PORT_DEFAULT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 8000\n                    \n                \n\n\n        \n    \n\n    src/common/errors/error-messages.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ERROR_MESSAGES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  URL_NOT_FOUND: 'URL not found',\n}\n                    \n                \n\n\n        \n    \n\n    src/urls/entities/url.providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        urlProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    provide: URLS_REPOSITORY,\n    useFactory: (dataSource: DataSource) => dataSource.getRepository(Url),\n    inject: [DATA_SOURCE],\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/common/constants/validation-messages.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ValidationMessages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  required: (property: string) => `${property} is required.`,\n  isUrl: (property: string) => `Please provide a valid URL for ${property}.`,\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
